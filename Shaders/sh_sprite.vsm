//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer ConstantBufferSprite
// {
//
//   float render_pos_x;                // Offset:    0 Size:     4
//   float render_pos_y;                // Offset:    4 Size:     4
//   float render_width;                // Offset:    8 Size:     4
//   float render_height;               // Offset:   12 Size:     4
//   float screen_width;                // Offset:   16 Size:     4
//   float screen_height;               // Offset:   20 Size:     4
//   float render_z;                    // Offset:   24 Size:     4
//   float fAlpha;                      // Offset:   28 Size:     4 [unused]
//   float4 diffuseColor;               // Offset:   32 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// ConstantBufferSprite              cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[3], immediateIndexed
dcl_input v0.xy
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_temps 1
div r0.xyzw, cb0[0].zwxy, cb0[1].xyxy
mad r0.xy, v0.xyxx, r0.xyxx, r0.zwzz
mad o0.xy, r0.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
mov o0.z, cb0[1].z
mov o0.w, l(1.000000)
mov o1.xyzw, cb0[2].xyzw
mov o2.xy, v1.xyxx
ret 
// Approximately 8 instruction slots used
